; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:myenv]
platform = ststm32
board = nucleo_l152re
framework = mbed
; use our own copy of the esp8266-driver
lib_deps = esp8266-driver-master
; ignore mbed-os' built-in version
lib_ignore = mbed-esp8266-driver
; configure all of our modules.. 
; important stuff: 
; * pin connections to the ESP8266 module
;    * remember: TX -> RX, RX -> TX, CTS->RTS, RTS->CTS (from mbed-os board to ESP)
;    * hardware flow control optional but recommended - if not used: use "NC" as pin (not connected)
; * delimit special chars (spaces, quotation marks) when defining MBED_CONF_APP_WIFI_SSID
;   * these get passed as a command-line parameter to GCC, must be shell-escaped
;   * or just remove the defines and hardcode it in main.cpp..
; * debug stuff: comment DEBUG / TRACE enabled lines and call mbed_trace_init() in main.cpp
;    * very useful to do low-level debugging what's going on inside the parser..
; * https://docs.platformio.org/en/latest/frameworks/mbed.html#id9
; * MBED_CONF_ESP8266_SOCKET_BUFSIZE for socker buffer size
; * -I"$PIOHOME_DIR/packages/framework-mbed/features" because otherwise it doesn't find nsapi.h
; * some settings are leftovers from trying to debug / optimize things
build_flags = 
	-D MBED_CONF_PLATFORM_STDIO_CONVERT_NEWLINES=1
;	-D MBED_CONF_ESP8266_DEBUG=1
;	-D MBED_CONF_MBED_TRACE_ENABLE=1
;	-D MBED_CONF_MBED_TRACE_FEA_IPV6=1
	-D MBED_CONF_PLATFORM_DEFAULT_SERIAL_BAUD_RATE=115200
;	-D MBED_CONF_DRIVERS_UART_SERIAL_RXBUF_SIZE=2048
	-D MBED_CONF_APP_WIFI_SSID=\"wifi_name_here\" 
	-D MBED_CONF_APP_WIFI_PASSWORD=\"wifi_password_here\" 
	-D MBED_CONF_ESP8266_TX=PA_9
	-D MBED_CONF_ESP8266_RX=PA_10
	-D MBED_CONF_ESP8266_RTS=PA_12
	-D MBED_CONF_ESP8266_CTS=PA_11
	-D MBED_CONF_ESP8266_PROVIDE_DEFAULT=true
	-D MBED_CONF_ESP8266_SOCKET_BUFSIZE=4096
	-D PIO_FRAMEWORK_MBED_RTOS_PRESENT
	-D PIO_FRAMEWORK_MBED_EVENTS_PRESENT
	-D MBED_CONF_RTOS_PRESENT
	-D MBED_CONF_EVENTS_PRESENT
	-D MBED_CONF_NSAPI_PRESENT
	-I lib/esp8266-driver-master/ESP8266
	-I"$PIOHOME_DIR/packages/framework-mbed/features"
; our nucleo board has a ST-LinkV2 debugger, use that instead of the "thumb drive" upload method
; or delete this line to use the default configuration for the board
upload_protocol = stlink
	